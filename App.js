"use strict";class App extends preact.Component{constructor(e){super(e),this.state={levels:levels,statistics:{},currentLevelNumber:1,currentLevelPack:0,currentScreen:"main"},this.launchLevel=this.launchLevel.bind(this),this.launchNextLevel=this.launchNextLevel.bind(this),this.getCurrentLevel=this.getCurrentLevel.bind(this),this.closeLevel=this.closeLevel.bind(this),this.load=this.load.bind(this),this.save=this.save.bind(this),this.getLevelAchivments=this.getLevelAchivments.bind(this),this.setLevelAchivments=this.setLevelAchivments.bind(this),this.restartLevel=this.restartLevel.bind(this),this.launchCurrentLevel=this.launchCurrentLevel.bind(this),this.packAchivmentsGot=this.packAchivmentsGot.bind(this),this.packAchivmentsMax=this.packAchivmentsMax.bind(this)}getCurrentLevelPackColor(){const e=this.state.currentLevelPack;return this.state.levels[e].color}getCurrentLevel(){const e=this.state.currentLevelPack,t=this.state.currentLevelNumber;return this.state.levels[e].levels[t-1]}launchLevel(e,t){this.setState((s=>({currentScreen:"game",currentLevelPack:e,currentLevelNumber:t})))}launchCurrentLevel(){const e=this.state.currentLevelPack,t=this.state.currentLevelNumber;this.launchLevel(e,t)}restartLevel(e){const t=this.state.currentLevelPack,s=this.state.currentLevelNumber;this.setLevelAchivments(t,s,e),this.setState((e=>({currentScreen:"game"})))}launchNextLevel(e){const t=this.state.currentLevelNumber,s=this.state.currentLevelPack;this.setLevelAchivments(s,t,e);let i=t+1,n=s;void 0===this.state.levels[n].levels[i-1]&&(i=1,n=s+1,void 0===this.state.levels[n]&&(n=0)),this.setState({currentLevelNumber:i,currentLevelPack:n,currentScreen:"game"})}getSaveData(){return{currentLevelNumber:this.state.currentLevelNumber,currentLevelPack:this.state.currentLevelPack,statistics:this.state.statistics}}setSaveData(e){this.setState(e)}closeLevel(){this.setState({currentScreen:"main"})}load(){uploadFile("json",(e=>{const t=JSON.parse(e);this.setSaveData(t)}))}save(){const e=this.getSaveData(),t=JSON.stringify(e),s=new Date,i=s.getFullYear().toString()+"-"+(s.getMonth()+1).toString()+"-"+s.getDate().toString(),n=s.getHours()+":"+s.getMinutes()+":"+s.getSeconds();downloadFile("algorithm-save-"+i+"-"+n+".json",t)}getLevelAchivments(e,t){const s=this.state.statistics;return void 0===s[t]||void 0===s[t][e]?[!1,!1,!1]:s[t][e]}setLevelAchivments(e,t,s){this.setState((i=>{const n=s;if(void 0===i.statistics[e]&&(i.statistics[e]={}),void 0!==i.statistics[e][t])for(let s=0;s<n.length;s++)!1===n[s]&&!0===i.statistics[e][t][s]&&(n[s]=!0);return i.statistics[e][t]=n,{statistics:i.statistics}}))}packAchivmentsGot(e){let t=0;const s=this.state.statistics[e];if(void 0!==s)for(const e of Object.values(s))t+=e.filter((e=>!0===e)).length;return t}packAchivmentsMax(e){const t=this.state.levels[e];return 3*Object.values(t.levels).length}render(){const e=this.state.currentScreen;this.state.statistics;if("main"===e||"credits"===e){const e=this.getCurrentLevelPackColor(),t=this.state.currentLevelNumber;return h("div",{className:"app unselectable"},h(MainMenu,{lastLevelNumber:t,lastLevelPackColor:e,onPlayButtonClick:this.launchCurrentLevel,loadFunction:this.load,saveFunction:this.save}),h(Levels,{levels:this.state.levels,launchLevelFunction:this.launchLevel,getLevelAchivments:this.getLevelAchivments,packAchivmentsMax:this.packAchivmentsMax,packAchivmentsGot:this.packAchivmentsGot}))}if("game"===e){const e=this.getCurrentLevel();return h("div",{className:"app unselectable"},h(Game,{key:e.name+" "+Date.now().toString(),level:e,backToMenuFunction:this.closeLevel,nextLevelFunction:this.launchNextLevel,restartLevelFunction:this.restartLevel,reportAchivmentsFunction:this.setLevelAchivments}))}}}